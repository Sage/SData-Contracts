<?xml version="1.0"?>
<ResultGroupInfo xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Label>Tests</Label>
  <ResultState>New</ResultState>
  <Nodes>
    <ResultInfoBase xsi:type="ResultGroupInfo">
      <Label>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Label>
      <ResultState>Warning</ResultState>
      <Nodes>
        <ResultInfoBase xsi:type="ResultGroupInfo">
          <Label>SData Validation Tests</Label>
          <Description>The SData Validation Tests is a collection of tests that check the various aspects mandated by the SData standard. &lt;br&gt;A detailed description of the SData standard can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata-0_9/SDataProtocolDescription.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata-0_9/SDataProtocolDescription.html&lt;/a&gt;</Description>
          <ResultState>Warning</ResultState>
          <Nodes>
            <ResultInfoBase xsi:type="ResultGroupInfo">
              <Label>Application level tests</Label>
              <Description>The tests grouped in this collection operate on a URL that points to an application. &lt;br&gt;
They check various aspects of the SData standard such as URL structure, discoverability and application-wide schema. &lt;br&gt; &lt;br&gt;
A detailed description of the SData standard can be found under: &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata-0_9/SDataProtocolDescription.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata-0_9/SDataProtocolDescription.html&lt;/a&gt;</Description>
              <ResultState>PreconditionNotFulfilled</ResultState>
              <Nodes>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>URL syntax</Label>
                  <Description>The tests grouped in this collection operate on a URL that points to an application.&lt;br&gt;
They check various aspects mandated by the SData standard regarding the URL structure.&lt;br&gt; &lt;br&gt; 
A detailed description of the SData standard can be found under: &lt;br&gt;  
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription.html&lt;/a&gt;
</Description>
                  <ResultState>Ok</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>SData Segment</Label>
                      <Description>The test checks for the presence of the ‘sdata’ segment is present in the URL provided. &lt;br&gt; &lt;br&gt; 
The presence of this segment is mandatory for sdata feeds (unless the technical framework imposes something different). &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under: &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;Check by means of a regular expression whether the ‘sdata’ is at the correct position in the URL
</Description>
                      <ResultState>Ok</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Url>
                      <Login />
                      <Password />
                      <FeatureType>Required</FeatureType>
                      <Category>Application</Category>
                      <TimeConsumed>2</TimeConsumed>
                      <Target>Application</Target>
                      <Result>
                        <State>Ok</State>
                        <Message>sdata segment is part of the url.</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.Fundamental.UrlSyntax.SDataSegment</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Application Segment</Label>
                      <Description>The test checks for the presence of the segment naming the application in the URL provided.  &lt;br&gt;&lt;br&gt;
The application name succeeds the ‘sdata’ segment in the URL. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;Check by means of a regular expression whether the application segment is at the correct position in the URL
</Description>
                      <ResultState>Ok</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Url>
                      <Login />
                      <Password />
                      <FeatureType>Required</FeatureType>
                      <Category>Application</Category>
                      <TimeConsumed>4</TimeConsumed>
                      <Target>Application</Target>
                      <Result>
                        <State>Ok</State>
                        <Message>Application segment is part of the url.</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.Fundamental.UrlSyntax.ApplicationSegment</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Dataset Segment</Label>
                      <Description>The test checks for the presence of the optional dataset specification within the application segment of the provided URL.  &lt;br&gt;&lt;br&gt;
The dataset specification allows the identification of a specific dataset of the application to be tested. If several parameters are required to specify the dataset (for example database name and company id), they should be formatted as a single parameter in the URL (for example sageApp('demodb;acme') -- the semicolon separator is application specific, not imposed by SData).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Application Segment is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;Check by means of a regular expression within the application segment for the presence of a specification enclosed by brackets and quotes.</Description>
                      <ResultState>Ok</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Url>
                      <Login />
                      <Password />
                      <FeatureType>Required</FeatureType>
                      <Category>Application</Category>
                      <TimeConsumed>9</TimeConsumed>
                      <Target>Application</Target>
                      <Result>
                        <State>Ok</State>
                        <Message>Dataset segment is part of the url.</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.Fundamental.UrlSyntax.DatasetSegment</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Contract Segment</Label>
                      <Description>The test checks for the presence of the contract segment within the provided URL. &lt;br&gt; &lt;br&gt;
A given SData service may support several “integration contracts” side by side, for example, a typical Sage ERP service will support a crmErp contract which exposes the resources required by CRM integration (with schemas imposed by the
CRM/ERP contract) and a native or default contract which exposes all the resources of the ERP in their native format. &lt;br&gt; &lt;br&gt;
If the contract exposes a large number of resources kinds, the contract name may be followed by a functional group (eventually a hierarchy of functional groups) which will act as a folder (a hierarchy of folders) to organize the resources.&lt;br&gt; &lt;br&gt;
Typical functional groups would be default/financials, default/commercials, default/HR, etc. &lt;br&gt; &lt;br&gt;
The corresponding specification can be found under:  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Application Segment is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;Check by means of a regular expression the URL for a third segment. This is interpreted to be the contract segment.</Description>
                      <ResultState>Ok</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Url>
                      <Login />
                      <Password />
                      <FeatureType>Required</FeatureType>
                      <Category>Application</Category>
                      <TimeConsumed>1</TimeConsumed>
                      <Target>Application</Target>
                      <Result>
                        <State>Ok</State>
                        <Message>Contract segment is part of the url.</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.Fundamental.UrlSyntax.ContractSegment</FullName>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultTestInfo">
                  <Label>Schema existence</Label>
                  <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level.  &lt;br&gt;    &lt;br&gt;  
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract hould have a $schema URL.  &lt;br&gt;    &lt;br&gt;  
The corresponding specification can be found under :  &lt;br&gt;  
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt;    &lt;br&gt;  
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;  
- Append the “/$schema” to the original URL   &lt;br&gt;  
- Perform an http GET operation on the resulting URL  &lt;br&gt;  
- Check response for a 200 status code  &lt;br&gt;  
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. 
</Description>
                  <ResultState>Ok</ResultState>
                  <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Url>
                  <Login />
                  <Password />
                  <FeatureType>Required</FeatureType>
                  <Category>Application</Category>
                  <TimeConsumed>304</TimeConsumed>
                  <Target>Application</Target>
                  <Result>
                    <State>Ok</State>
                    <Message>This URL returns a schema.</Message>
                    <Error />
                  </Result>
                  <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                  <FullName>Sage.Sis.Sdata.Validation.TestCases.Fundamental.UrlSyntax.Schema</FullName>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultTestInfo">
                  <Label>ResourceKind Definition Correctness</Label>
                  <Description>SData imposes some rules on schemas, one relates to the definition of resource kinds 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.htm" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.htm&lt;/a&gt;).  
All resource kinds must have a name be defined directly under the root xs:schema element.
&lt;br/&gt;&lt;br/&gt;
The validation tool checks that all resource kinds are defined correctly, 
that is they have a name and are defined as xs:element directly beneath the xs:schema root element.  
The validation tool checks all resource kinds including relationships.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the xs:element elements&lt;/li&gt; 
&lt;li&gt;Check that if the &lt;b&gt;sme:role="resourceKind"&lt;/b&gt; attribute is set, the respective element is declared directly under the parent node&lt;/li&gt;
&lt;li&gt;Check that every resourceKind has defined &lt;b&gt;sme:pluralName&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;</Description>
                  <ResultState>Ok</ResultState>
                  <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Url>
                  <Login />
                  <Password />
                  <FeatureType>Required</FeatureType>
                  <Category>Application</Category>
                  <TimeConsumed>198</TimeConsumed>
                  <Target>Application</Target>
                  <Result>
                    <State>Ok</State>
                    <Message>Test passed.</Message>
                    <Error />
                  </Result>
                  <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                  <FullName>Sage.Sis.Sdata.Validation.TestCases.Fundamental.Schema.SyntacticValidation.ResourceKindDefinition</FullName>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultTestInfo">
                  <Label>Contract Services discoverable</Label>
                  <Description>The test checks whether services are available under the URL provided.  &lt;br&gt; 
Services are exposed under the $service segment which is assumed to be immediately succeeding the provided URL. &lt;br&gt;  &lt;br&gt; 
The corresponding specification can be found under : &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;  
- Append the “/$service” to the original URL  &lt;br&gt;  
- Perform an http GET operation on the resulting URL &lt;br&gt;  
- Check response for a 200 status code  &lt;br&gt;  
- Check the response content type to be one of: application/atom+xml or application/atom+xml;type=feed  &lt;br&gt;  
- Check for the existence of a valid feed element in the response  &lt;br&gt;  </Description>
                  <ResultState>PreconditionNotFulfilled</ResultState>
                  <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-</Url>
                  <Login />
                  <Password />
                  <FeatureType>Optional</FeatureType>
                  <Category>Application</Category>
                  <TimeConsumed>16</TimeConsumed>
                  <Target>Application</Target>
                  <Result>
                    <State>PreconditionNotFulfilled</State>
                    <Message>No services available. Returned status code was: 404 NotFound</Message>
                    <Error />
                  </Result>
                  <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                  <FullName>Sage.Sis.Sdata.Validation.TestCases.Fundamental.UrlSyntax.Service</FullName>
                </ResultInfoBase>
              </Nodes>
            </ResultInfoBase>
            <ResultInfoBase xsi:type="ResultGroupInfo">
              <Label>Resource level tests</Label>
              <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. &lt;br&gt; 
They check various aspects mandated by the SData standard such as metadata, format compliance and correctness of the various operations available at the resource kind level. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata-0_9/SDataProtocolDescription.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata-0_9/SDataProtocolDescription.html&lt;/a&gt;
</Description>
              <ResultState>Warning</ResultState>
              <Nodes>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>tradingAccounts</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>14</TimeConsumed>
                      <Target>tradingAccounts</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>205</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>319</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>50</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>15</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>5</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "settlementDiscountAmount" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "currency" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "deliveryRule" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "type" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "name" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "customerSupplierFlag" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>7</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>32501</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2855</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>116</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>12</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>11</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>5</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6509</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>8</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1697</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>10680</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4157</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts?startIndex=122&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>52257</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 3 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts?count=50&amp;startIndex=101&lt;br&gt;Trying to request page 3.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>7</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>9</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>8</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>51</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>5</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>6</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>5</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>7</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>371</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>7</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>96</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>SData POST exists</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>112</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>Warning</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>310</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Warning</State>
                            <Message>POST does not return the created entry</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>Warning</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>554</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Warning</State>
                            <Message>POST does not return the created entry</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>370</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>PUT exists</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1281</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message> PUT exists</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1568</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>PUT supplierFlag--enum='Customer'
 PUT executed successfuly.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1943</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>883</TimeConsumed>
                              <Target>tradingAccounts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts('C-PICCO')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts/$linked('0ce12741-0edb-4b2a-9d27-071dd2fb12ad')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=0ce12741-0edb-4b2a-9d27-071dd2fb12ad</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1660</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Validation passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>22</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3305</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/tradingAccounts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>8649</TimeConsumed>
                          <Target>tradingAccounts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>contacts</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>13</TimeConsumed>
                      <Target>contacts</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>175</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>284</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>20</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "primacyIndicator" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "suffix" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "middleName" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "title" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "familyName" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "firstName" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "fullName" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>20672</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>678</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('S-15')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('S-14')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('S-13')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('S-12')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('S-11')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('S-10')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('S-1')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-WOLZA')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-WILMK')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-WHITC')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-WELLI')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-WARTH')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-WANDK')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-VINET')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-VICTE')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-VAFFE')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-TRAIH')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-TRADH')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-TORTU')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-TOMSP')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-THECR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-THEBI')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-SUPRD')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-SPLIR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-SPECD')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-SIMOB')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-SEVES')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-SAVEA')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-SANTG')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-ROMEY')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-RICSU')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-RICAR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-REGGC')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-RATTC')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-RANCH')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-QUICK')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-QUEEN')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-QUEDE')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-PRINI')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-PICCO')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-PERIC')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-PARIS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-OTTIK')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-OLDWO')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-OCEAN')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-NORTS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-MORGK')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-MEREP')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-MAISD')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-MAGAA')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LONEP')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LINOD')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LILAS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LETSS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LEHMS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LAZYK')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LAUGB')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LAMAI')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-LACOR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-KOENE')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-ISLAT')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-HUNGO')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-HUNGC')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-HILAA')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-HANAR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-GROSR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-GREAL')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-GOURL')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-GODOS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-GALED')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FURIB')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FRANS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FRANR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FRANK')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FOLKO')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FOLIG')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FISSA')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-FAMIA')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-ERNSH')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-EASTC')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-DUMON')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-DRACD')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-CONSH')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-COMMI')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-CHOPS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-CENTC')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-CACTU')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-BSBEV')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-BOTTM')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-BONAP')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-BOLID')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-BLONP')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-BLAUS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-BERGS')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-AROUT')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-ANTON')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-ANATR')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-ALFKI')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-A8373')" payload, because sme:unsupported="false".&lt;br&gt;Element "tradingAccount" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/contacts('C-A7079')" payload, because sme:unsupported="false".</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>40</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>4070</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>810</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6951</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2507</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts?startIndex=122&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>33692</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 3 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts?count=50&amp;startIndex=101&lt;br&gt;Trying to request page 3.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>269</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>80</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1617</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>631</TimeConsumed>
                              <Target>contacts</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts('C-RICAR')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts/$linked('0a9de25f-fe8b-4e4c-8be9-5f556f718316')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=0a9de25f-fe8b-4e4c-8be9-5f556f718316</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3101</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Validation passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>47</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>2459</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/contacts</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3862</TimeConsumed>
                          <Target>contacts</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>salesOrders</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>13</TimeConsumed>
                      <Target>salesOrders</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>168</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>253</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>63</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "grossTotal" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "discountTotal" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "netTotal" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "lineCount" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "date" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "invoiceCurrencyExchangeRate" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "currency" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "carrierTotalPrice" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "dueDate" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "deliveryDate" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "deliveryMethod" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>160220</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>6725</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10347')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10346')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10345')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10344')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10343')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10342')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10341')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10340')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10339')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10338')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10337')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10336')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10335')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10334')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10333')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10332')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10331')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10330')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10329')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10328')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10327')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10326')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10325')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10324')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10323')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10322')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10321')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10320')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10319')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10318')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10317')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10316')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10315')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10314')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10313')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10312')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10311')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10310')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10309')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10308')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10307')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10306')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10305')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10304')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10303')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10302')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10301')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10300')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10299')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10298')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10297')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10296')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10295')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10294')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10293')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10292')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10291')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10290')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10289')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10288')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10287')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10286')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10285')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10284')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10283')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10282')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10281')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10280')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10279')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10278')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10277')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10276')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10275')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10274')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10273')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10272')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10271')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10270')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10269')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10268')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10267')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10266')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10265')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10264')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10263')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10262')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10261')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10260')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10259')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10258')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10257')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10256')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10255')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10254')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10253')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10252')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10251')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10250')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10249')" payload, because sme:unsupported="false".&lt;br&gt;Element "pricelist" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/salesOrders('10248')" payload, because sme:unsupported="false".</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>266</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>28</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>21</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>32374</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>5436</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>51968</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>19085</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?startIndex=837&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1372075.7197</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 17 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=801&lt;br&gt;Trying to request page 17.&lt;br&gt;Page 16 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=751&lt;br&gt;Trying to request page 16.&lt;br&gt;Page 15 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=701&lt;br&gt;Trying to request page 15.&lt;br&gt;Page 14 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=651&lt;br&gt;Trying to request page 14.&lt;br&gt;Page 13 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=601&lt;br&gt;Trying to request page 13.&lt;br&gt;Page 12 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=551&lt;br&gt;Trying to request page 12.&lt;br&gt;Page 11 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=501&lt;br&gt;Trying to request page 11.&lt;br&gt;Page 10 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=451&lt;br&gt;Trying to request page 10.&lt;br&gt;Page 9 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=401&lt;br&gt;Trying to request page 9.&lt;br&gt;Page 8 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=351&lt;br&gt;Trying to request page 8.&lt;br&gt;Page 7 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=301&lt;br&gt;Trying to request page 7.&lt;br&gt;Page 6 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=251&lt;br&gt;Trying to request page 6.&lt;br&gt;Page 5 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=201&lt;br&gt;Trying to request page 5.&lt;br&gt;Page 4 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=151&lt;br&gt;Trying to request page 4.&lt;br&gt;Page 3 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=101&lt;br&gt;Trying to request page 3.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1942.1942000000001</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>82.0082</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1.0001</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>9560.956</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2733.2733000000003</TimeConsumed>
                              <Target>salesOrders</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders('10510')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders/$linked('0e9ab28c-8e99-4a6a-ad90-7ae9dc4dac8f')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=0e9ab28c-8e99-4a6a-ad90-7ae9dc4dac8f</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>4657.4657000000007</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Validation passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>53.005300000000005</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>15299.5298</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/salesOrders</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>28052.805</TimeConsumed>
                          <Target>salesOrders</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>commodities</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>15.0015</TimeConsumed>
                      <Target>commodities</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>225.0225</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>305.0305</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>21.002100000000002</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3.0003</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "type" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "name" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>17248.724700000002</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>337.0337</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('77')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('77')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('76')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('76')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('75')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('75')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('74')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('74')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('73')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('73')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('72')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('72')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('71')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('71')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('70')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('70')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('69')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('69')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('68')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('68')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('67')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('67')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('66')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('66')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('65')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('65')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('64')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('64')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('63')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('63')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('62')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('62')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('61')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('61')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('60')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('60')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('59')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('59')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('58')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('58')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('57')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('57')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('56')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('56')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('55')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('55')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('54')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('54')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('52')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('52')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('51')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('51')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('50')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('50')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('49')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('49')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('48')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('48')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('47')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('47')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('46')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('46')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('45')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('45')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('44')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('44')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('43')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('43')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('41')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('41')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('40')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('40')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('39')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('39')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('38')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('38')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('37')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('37')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('36')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('36')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('35')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('35')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('34')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('34')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('33')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('33')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('32')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('32')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('31')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('31')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('30')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('30')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('27')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('27')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('26')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('26')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('25')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('25')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('23')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('23')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('22')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('22')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('21')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('21')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('20')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('20')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('19')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('19')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('18')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('18')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('16')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('16')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('15')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('15')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('14')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('14')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('13')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('13')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('12')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('12')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('11')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('11')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('10')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('10')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('8')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('8')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('7')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('7')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('6')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('6')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('4')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('4')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('3')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('3')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('2')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('2')" payload, because sme:unsupported="false".&lt;br&gt;Element "unitOfMeasure" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('1')" payload, because sme:unsupported="false".&lt;br&gt;Element "commodityGroup" should be part of the entry "http://KAR-23970-WS:5493/sdata/Northwind/gcrm/-/commodities('1')" payload, because sme:unsupported="false".</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>16.0016</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3.0003</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2.0002</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>4801.4801000000007</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1215.1215</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>12504.2503</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3326.3326</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities?startIndex=69&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>28945.8943</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>641.0641</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>4.0004</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1.0001</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>26.0026</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>PUT exists</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>374.0374</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message> PUT exists</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>Warning</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>124.0124</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Warning</State>
                            <Message>Http Status Code: InternalServerError&lt;br&gt;Das Feld 'Products.ProductName' kann keinen Null-Wert enthalten, da die Required-Eigenschaft für dieses Feld den Wert True hat. Geben Sie in das Feld einen Wert ein.&lt;br&gt;PUT active='false'
</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1513.1513</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>700.07</TimeConsumed>
                              <Target>commodities</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities('11')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities/$linked('de2420cd-556f-4564-bc84-56d89a821633')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=de2420cd-556f-4564-bc84-56d89a821633</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1973.1973</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Validation passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>50.005</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>751.0751</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodities</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6617.6617000000006</TimeConsumed>
                          <Target>commodities</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>commodityGroups</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>15.0015</TimeConsumed>
                      <Target>commodityGroups</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>248.0248</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>303.0303</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>43.0043</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3.0003</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "description" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "name" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "type" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>729.0729</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3.0003</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2.0002</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>666.0666</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>8 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>8 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>8 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>508.05080000000004</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1917.1917</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>959.0959</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups?startIndex=8&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1352.1352000000002</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Could not complete test. First page does not provide a &amp;lt;link rel="next"&amp;gt; element. If more than 50 records are provided for this resource kind this is an ERROR, otherwise provide more records and run the test again.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>122.0122</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>95.0095</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>374.0374</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>PUT exists</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>568.05680000000007</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message> PUT exists</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>Warning</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>601.0601</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Warning</State>
                            <Message>PUT active='false'
 GET after PUT returns different result as expected.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>574.0574</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>391.0391</TimeConsumed>
                              <Target>commodityGroups</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups('3')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups/$linked('64a7fb06-25b3-4a20-916c-04acd167bff0')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=64a7fb06-25b3-4a20-916c-04acd167bff0</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1357.1357</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Validation passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>53.005300000000005</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>985.09850000000006</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/commodityGroups</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1198.1198000000002</TimeConsumed>
                          <Target>commodityGroups</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>prices</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>15.0015</TimeConsumed>
                      <Target>prices</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>190.019</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>229.02290000000002</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>39.0039</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1.0001</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3.0003</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "price" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>25679.5677</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>182.0182</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>24.0024</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3.0003</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3.0003</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6437.6437000000005</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1207.1207000000002</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>10518.0517</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4146.4146</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices?startIndex=77&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>41393.6371</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>366</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1990</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>859</TimeConsumed>
                              <Target>prices</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices('11')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices/$linked('53486f10-7367-4092-89a5-d0ccb5aa6c9f')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=53486f10-7367-4092-89a5-d0ccb5aa6c9f</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>4467</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Validation passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>52</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3678</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/prices</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>8225</TimeConsumed>
                          <Target>prices</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>unitsOfMeasure</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>15</TimeConsumed>
                      <Target>unitsOfMeasure</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>173</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>311</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>32</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "description" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "name" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>6427</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>131</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>19</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>3</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1678</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>461</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3094</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1110</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure?startIndex=77&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>10564</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>127</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>4</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>Ok</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>573</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>390</TimeConsumed>
                              <Target>unitsOfMeasure</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure('11')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure/$linked('a87deaca-b5e2-42fc-8838-265fce59d5b8')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=a87deaca-b5e2-42fc-8838-265fce59d5b8</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1924</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Validation passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>51</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>493</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/unitsOfMeasure</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1010</TimeConsumed>
                          <Target>unitsOfMeasure</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>postalAddresses</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>16</TimeConsumed>
                      <Target>postalAddresses</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>169</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>326</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>22</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "type" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "primacyIndicator" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "country" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "zipPostCode" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "stateRegion" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "county" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "townCity" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "address4" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "address3" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "address2" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "address1" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>20818</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>294</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>42</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>5</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>5</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>4358</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1500</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6967</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2539</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses?startIndex=124&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>33781</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 3 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses?count=50&amp;startIndex=101&lt;br&gt;Trying to request page 3.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>253</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1306</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>637</TimeConsumed>
                              <Target>postalAddresses</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses('C-RICAR')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses/$linked('b2858eb1-ce73-4aae-9a41-fb8e03f5481f')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=b2858eb1-ce73-4aae-9a41-fb8e03f5481f</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/postalAddresses</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>postalAddresses</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>emails</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>15</TimeConsumed>
                      <Target>emails</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>172</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>311</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>21</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "address" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>382</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>530</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>4 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>4 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>4 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>483</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1126</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>603</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails?startIndex=4&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>736</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Could not complete test. First page does not provide a &amp;lt;link rel="next"&amp;gt; element. If more than 50 records are provided for this resource kind this is an ERROR, otherwise provide more records and run the test again.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>124</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>5</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>402</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>387</TimeConsumed>
                              <Target>emails</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails('3')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails/$linked('df9367b9-ca28-45ba-9b05-44d63bb45820')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=df9367b9-ca28-45ba-9b05-44d63bb45820</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/emails</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>emails</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
                <ResultInfoBase xsi:type="ResultGroupInfo">
                  <Label>phoneNumbers</Label>
                  <Description />
                  <ResultState>Warning</ResultState>
                  <Nodes>
                    <ResultInfoBase xsi:type="ResultTestInfo">
                      <Label>Service existence</Label>
                      <Description>The test checks whether services are available under the URL accessing a resource kind.&lt;br&gt;&lt;br&gt;
Resource specific services are exposed under the $service segment which is assumed to be immediately succeeding the resource kind URL.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under :&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ServiceOperationURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$service” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for the existence of a valid feed element in the response&lt;br&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                      <Login />
                      <Password />
                      <FeatureType>Optional</FeatureType>
                      <Category>ResourceGeneral</Category>
                      <TimeConsumed>15</TimeConsumed>
                      <Target>phoneNumbers</Target>
                      <Result>
                        <State>PreconditionNotFulfilled</State>
                        <Message>No services available. Returned status code was: 404 NotFound</Message>
                        <Error />
                      </Result>
                      <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                      <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Service</FullName>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Resource schema</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check various aspects mandated by the SData standard regarding the metadata of the associated resource kind. &lt;br&gt; &lt;br&gt; A detailed description can be found under: &lt;br&gt; &lt;br&gt; &lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                      <ResultState>Warning</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema existence</Label>
                          <Description>The test checks whether under the provided URL the schema for the application is available for retrieval. The schema is provided under the $schema segment, which can be specified at both the application and the resource level. &lt;br&gt; &lt;br&gt; 
Every contract should have an associated schema that describes the XML payloads for the resources and service operations exposed by the service. So, every contract should have a $schema URL. &lt;br&gt; &lt;br&gt; 
The corresponding specification can be found under :  &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceSchemaURL.html&lt;/a&gt; &lt;br&gt; &lt;br&gt;
NOTE: The presence of a correct schema describing the resources and services of an application along with their payloads is a precondition for most of the tests performed by the validation tool.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:  &lt;br&gt;
- Append the “/$schema” to the original URL   &lt;br&gt;
- Perform an http GET operation on the resulting URL  &lt;br&gt;
- Check response for a 200 status code  &lt;br&gt;
- On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. </Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>186</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>This URL returns a xml schema.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Schema validity</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check formal syntactic aspects mandated by the SData standard regarding the metadata of the associated resource kind.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata.html&lt;/a&gt;
</Description>
                          <ResultState>Warning</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Complex type All structure</Label>
                              <Description>The Schema defines the resource structure as a set of property elements below  the complexType definition. SData recommends that these elements be grouped under an &lt;b&gt;xs:all&lt;/b&gt; element rather than an &lt;b&gt;xs:sequence&lt;/b&gt; element because SData producers and consumers should not rely on a specific ordering of property values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt;
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;

&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all complexType elements and check that the child element &lt;b&gt;xs:all&lt;/b&gt; is defined &lt;/li&gt;
   &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>274</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ComplexTypeAllStructure</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>SME Conformance</Label>
                              <Description>This element definition contains a mix of standard XSD attributes and SData extensions. The following table describes the attributes that are relevant in a resource kind definition.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check whether all sme attributes are defined within the &lt;b&gt;sme&lt;/b&gt; namespace.&lt;/li&gt; &lt;/ul&gt; </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>20</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeConformance</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ResourceKind Duplicity</Label>
                              <Description>The validation tool checks that all resource kinds are uniquely named, that is the same resource kind name cannot appear twice in any given namespace.  The same name can be used subject to separate namespace qualification.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that it's defined only once for the given namespace in the xml schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ResourceKindDuplicity</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Element ComplexType Definition</Label>
                              <Description>The SData specification recommends that the resource structure be defined as xs:complexType element rather than as a subset of the resource element. The validation tool checks that all resource kinds are followed by an &lt;b&gt;xs:compexType&lt;/b&gt; 
element with the correct name, that is the resource kind name and &lt;b&gt;--type&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; 
&lt;br&gt; &lt;br&gt; 
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL&lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Investigate the first element of the result and determine whether it is a defined as a complex type&lt;/li&gt;
&lt;/ul&gt;
</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.ElementComplexTypeDefinition</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase </Label>
                              <Description>The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/NamingConventionsForURLs.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element check it's name matches the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCase</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>camelCase Properties </Label>
                              <Description>The validation tool checks for correct camelCase on property names within a schema.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;

The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the given ResourceKind element that it's property names match the &lt;b&gt;camelCase&lt;/b&gt; rules&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.CamelCaseProperties</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme pluralName </Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html&lt;/a&gt; and &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/SimpleMetadataExtensions.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:role&lt;/b&gt; attribute against all top level elements in the schema (those marked with &lt;b&gt;xs:element&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:role&lt;/b&gt; attribute is set to either &lt;b&gt;“resourceKind”&lt;/b&gt; or &lt;b&gt;“serviceOperation”&lt;/b&gt; or &lt;b&gt;“query”&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:pluralName&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePluralName</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme precedence</Label>
                              <Description>All resource kinds in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html." target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/191-DSY.html.&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:label attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;li&gt;Check the presence of the &lt;b&gt;sme:precedence&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:precedence&lt;/b&gt; attribute is populated with a number value.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Warning</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Warning</State>
                                <Message>The sme:precedence property of the element "primacyIndicator" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "extension" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "number" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "areaCode" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "countryCode" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "text" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "type" is missing or is empty or cannot be parsed to a number value.&lt;br&gt;The sme:precedence property of the element "active" is missing or is empty or cannot be parsed to a number value.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmePrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Sme label</Label>
                              <Description>All (resource kind) properties in a schema must have the correct sme attributes set as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/192-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:label&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that the &lt;b&gt;sme:label&lt;/b&gt; attribute is populated with a value&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.SmeLabel</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Existence</Label>
                              <Description>In a schema, if a property has a data type with the suffix &lt;b&gt;--type&lt;/b&gt; or &lt;b&gt;--list&lt;/b&gt; 
then a relationship is implied 
(see &lt;a href="http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/XSDStructure.html&lt;/a&gt; and 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt;)  
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:relationship&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipExistence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Collection</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="reference"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the sme:isCollection attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Association</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="association"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check For the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipAssociation</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Child</Label>
                              <Description>In a schema, if a property is marked with the SData attribute &lt;b&gt;sme:relationship="child"&lt;/b&gt; 
then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to TRUE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--list&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipChild</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Parent</Label>
                              <Description>In a schema, if a property is marked with the SData attribute 
&lt;b&gt;sme:relationship="parent"&lt;/b&gt; then it must follow the correct form as per the spec 
&lt;a href="http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Metadata/193-DSY.html&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Check for the presence of the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute&lt;/li&gt;
&lt;li&gt;Check that &lt;b&gt;sme:isCollection&lt;/b&gt; is set to FALSE&lt;/li&gt;
&lt;li&gt;Check that the property data type is marked with the suffix &lt;b&gt;--type&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Check for the existence of the related resource kind within the schema&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipParent</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Relationship Orphaned Collection</Label>
                              <Description>If a schema (resource kind) property is marked with the &lt;b&gt;sme:isCollection&lt;/b&gt; attribute (any value) yet it is patently not a relationship property then the validation tool warns the user.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Iterate through all the defined ResourceKind elements&lt;/li&gt;
&lt;li&gt;For every ResourceKind element check that if &lt;b&gt;sme:isCollection="true"&lt;/b&gt; is defined, &lt;b&gt;sme:relationship&lt;/b&gt; should be defined as well&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Recommended</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.RelationshipOrphanedCollection</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:hasUuid</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that must be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has &lt;b&gt;sme:hasUuid&lt;/b&gt; attribute set to TRUE, that the returned feed contains an SData UUID attribute.&lt;/li&gt;
&lt;li&gt;check if a (resource kind) property has &lt;b&gt;sme:isMandatory&lt;/b&gt; attribute set to TRUE, that the property is present in the returned feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>19599</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUUID</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison sme:unsupported</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that there are a number of schema attributes that should be complied with in the returned feed.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;Check if a resource kind has the sme:unsupported attribute set to TRUE, that the returned feed does not contain that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:unsupported&lt;/b&gt; attribute set to TRUE, that the returned feed does not contain that property (on the resource kind)&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isUniqueKey&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:isLocalized&lt;/b&gt; attribute set to TRUE, then the returned feed should contain a value in that property&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>220</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonUnsupported</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Null Values</Label>
                              <Description>The validation tool checks that:
&lt;b&gt;xsi:nil="true"&lt;/b&gt; can be used only if &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries&lt;/li&gt;
&lt;li&gt;Iterate through all feed ResourceKind properties&lt;/li&gt;
&lt;li&gt;For every ResourceKind property which has &lt;b&gt;xsi:nil="true"&lt;/b&gt; check that &lt;b&gt;nillable="true"&lt;/b&gt; is defined in the schema&lt;/li&gt; 
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>36</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonNull</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance MUST</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;check if a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;Check if a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to MUST that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceMUST</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Feed Comparison Compliance SHOULD</Label>
                              <Description>The SData compliance summary (&lt;a href="http://interop.sage.com/daisy/sdata/662-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/662-DSY.html&lt;/a&gt;) 
states that compliance levels also apply to resource kinds and properties.
&lt;br/&gt;
&lt;b&gt;Note: Not all entries are examined. The number of entries to be checked can be changed in Menu-&gt;Settings.&lt;/b&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;&lt;br&gt;
The test proceeds as follows:
&lt;ul&gt;
&lt;li&gt;Append the “/$schema” to the original URL &lt;/li&gt;
&lt;li&gt;Perform an http GET operation on the resulting URL &lt;/li&gt;
&lt;li&gt;Check response for a 200 status code &lt;/li&gt;
&lt;li&gt;On successful retrieval, the result of the GET operation is read into a .Net XmlSchema object. &lt;/li&gt;
&lt;li&gt;Get all feed entries for the given resourceKind&lt;/li&gt;
&lt;li&gt;If a resource kind has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed can be returned for that resource kind&lt;/li&gt;
&lt;li&gt;If a (resource kind) property has the &lt;b&gt;sme:compliance&lt;/b&gt; attribute set to SHOULD that a feed returned for that resource kind has the relevant property in the feed.&lt;/li&gt;
&lt;/ul&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>4</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Schema.SyntacticValidation.FeedComparisonComplianceSHOULD</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP GET functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations.&lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/ReadOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/ReadOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Retrieve resource feed</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection).&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/ResourceCollectionURL.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This test is pivotal for a reasonable performance for the validation. The results are internally cached by the validation tool and used in subsequent tests without any further involvement of the provider. &lt;br&gt;&lt;br&gt;
NOTE: For performance reasons, the initial attempt will be to restrict the number of resources to be retrieved using the count specification. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform an http GET operation on the resource URL with a count = 5&lt;br&gt;
- If an error is returned, it is assumed that the count specification is not supported on the resource kind. In this case a subsequent GET operation is issued. If the response is paged by the provider, then only the first page is read. &lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
    o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
    o Check the existence of a feed element&lt;br&gt;
    o Check for the existence of a feed entry element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>All requested sucessfull</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.All</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>GET using ATOM ID url</Label>
                          <Description>This test checks the correctness of SData resource properties. In particular, it tests whether the URLs provided in the ATOM ID allow retrieval of individual SData resources&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL by retrieving the resource and comparing it against the original feed entry&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3345</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>20 Entries have valid id elements</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Individual.Correctness</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>ATOM compliance</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with SData’s underlying ATOM publishing protocol. &lt;br&gt; &lt;br&gt;
A detailed description can be found under: &lt;br&gt; &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Feed compliance</Label>
                              <Description>The test checks for the compliance of an SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) validate the feed envelope for compliance to the ATOM specification for a feed&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>A feed was returned</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Feed</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ATOM Entry compliance</Label>
                              <Description>The test checks for the compliance of an individual SData resource collection to the ATOM standard.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Introduction/186-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) with at least one resource investigate a single entry and validate against the ATOM specification for an entry&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries exist</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.Entry</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>ID element specification</Label>
                              <Description>This test checks the correct usage of the ATOM ID feed element is correctly specified.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataFeed/FeedElements.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 10 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) check whether the ID element points towards an SData resource kind URL &lt;br&gt;
- For each individual entry check whether the ID element points to a single resource URL&lt;br&gt;</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>20 Entries have valid id elements</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Syntax.IdElement</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Schema compliance</Label>
                          <Description>The test validates retrieved resources against the schema provided at the resource kind.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get operation is supported
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain at least one resource through an http GET operation on the resource URL. In order to avoid reading the whole dataset, the GET operation initially uses the count specification; should count not be supported a paged approach is taken.&lt;br&gt;
- Obtain the schema for the resource kind (either from the application schema or the resource kind schema)&lt;br&gt;
- Validate the retrieved resource against the schema specification&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Recommended</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>729</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.SchemaValidation</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Count</Label>
                          <Description>The test checks the ability to retrieve a feed containing several resources of the same resource kind (also known as a resource collection) by limiting the number of returned entries using the count specification.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryParameters.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;
NOTE: the ability to restrict the size of the collection has a direct influence on the run-time performance of the validation tests. In the absence of the count, the validation tool is forced to request a significantly higher number of records from the provider.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a collection of resources using the count = 5 specification&lt;br&gt;
- Check results for a status code of 200&lt;br&gt;
- On successful retrieval of a resource collection (feed) proceed to check the following&lt;br&gt;
     o Read the returned feed in a .Net XmlDocument object&lt;br&gt;
     o Check that the response content type is application/atom+xml or application/atom+xml;type=feed&lt;br&gt;
     o Check the existence of a feed element&lt;br&gt;
     o Check for the existence of a feed entry element&lt;br&gt;
- Assuming the above retrieval provided a number of X resources, perform the retrievals using the following count values:&lt;br&gt;
     o X-1 -&gt; should return X-1 resources&lt;br&gt;
     o 0 -&gt; should return a correct feed containing no entries&lt;br&gt;
     o -1 -&gt; should have the same effect as count=0&lt;br&gt;
     o 1 -&gt; should return a correct feed containing exactly one entry&lt;br&gt;
- If X lower than 5 (original query) retrieve using a count X+1 -&gt; should return a feed with exactly X entries&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>6078</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Test passed.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Get.Count</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Paging</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http GET operations that perform paging.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Index</Label>
                              <Description>canPageIndex indicates if the resource kind supports indexed paging. When this attribute is true, feeds must contain opensearch elements. Also, startIndex parameter must and count parameter should be supported in query URLs&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; &lt;br&gt; 
Schema exists and is valid&lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageIndex supported&lt;br&gt;
At least 3 entries reacheable&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;
&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a feed for resource type using query parameter startIndex=2.&lt;br&gt;
      Compare received entry[0] with entry[1] of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
- Obtain a last page for resource type using query parameter startIndex=opensearch:totalResults of source feed.&lt;br&gt;
      Check existence of the opensearch elements.&lt;br&gt;
      Validate opensearch element values.&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>2132</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed with startIndex=totalResults successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?startIndex=248&lt;br&gt;Trying to request feed with startIndex=totalResults.&lt;br&gt;Feed with startIndex=2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?startIndex=2&amp;count=1&lt;br&gt;Trying to request feed with startIndex=2.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?count=10&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageIndex</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed.&lt;br&gt;
- Obtain the first page using the &amp;lt;link ref="first"&amp;gt; of the source feed.&lt;br&gt;
Compare source feed with first page.&lt;br&gt;
- Iterate through the pages by following &amp;lt;link ref="next"&amp;gt; starting from first page.&lt;br&gt;
Validate the feed and check if the last page was reached.&lt;br&gt;    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>58286</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Page 5 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?count=50&amp;startIndex=201&lt;br&gt;Trying to request page 5.&lt;br&gt;Page 4 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?count=50&amp;startIndex=151&lt;br&gt;Trying to request page 4.&lt;br&gt;Page 3 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?count=50&amp;startIndex=101&lt;br&gt;Trying to request page 3.&lt;br&gt;Page 2 successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?count=50&amp;startIndex=51&lt;br&gt;Trying to request page 2.&lt;br&gt;First page successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?count=50&amp;startIndex=1&lt;br&gt;Trying to request first page using &amp;lt;link rel="first"&amp;gt; of source feed.&lt;br&gt;Source feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers?count=50&lt;br&gt;Trying to request source feed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNext</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Previous</Label>
                              <Description>canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
At least 2 pages for this resource kind&lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Iterate through the pages in backwards direction by following &amp;lt;link ref="previous"&amp;gt; starting from the last page.&lt;br&gt;
Validate the feed and check if the first page was reached.&lt;br&gt;    
Check for equality between entries of the first page (source feed) and the last page of iteration.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPagePrevious</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Can Page Next and Previous</Label>
                              <Description>canPageNext indicates if the resource kind supports sequential paging in forwards direction.
When this attribute is true, feeds must contain first link and next link. The last page in the sequence must not contain a next link.&lt;br&gt;
canPagePrevious indicates if the resource kind supports sequential paging in backwards direction.
When this attribute is true, feeds must contain last link and previous link. The first page in the sequence must not contain a previous link.
&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Paging.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Paging.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Preconditions: &lt;/b&gt;&lt;br&gt;
Schema exists and is valid &lt;br&gt;
sme:canGet supported &lt;br&gt;
sme:canPagePrevious supported &lt;br&gt;
sme:canPageNext supported &lt;br&gt;&lt;br&gt;
&lt;b&gt;Test Flow: &lt;/b&gt;&lt;br&gt;
- Obtain a feed (source feed) for the resource type using a Count=10 specification.&lt;br&gt;
Validate the feed as a first page.&lt;/b&gt;&lt;br&gt;
- Obtain the last page using &amp;lt;link ref="last"&amp;gt; of the source feed.&lt;br&gt;
Validate the last page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="first"&amp;gt; of the last page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
- Obtain the second page using &amp;lt;link ref="next"&amp;gt; of the first page.&lt;br&gt;
Validate the page.&lt;br&gt;
- Obtain the first page using &amp;lt;link ref="previous"&amp;gt; of the second page.&lt;br&gt;
Validate the first page.&lt;br&gt;
Check for equality between entries of source feed and the first page.&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not support bidirectional sequencial paging. Resource kind definition canPagePrevious missing or false.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.FeedNavigation.Paging.BasicCanPageNextAndPrevious</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Query</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the query language specification of the SData standard.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical And</Label>
                              <Description>The test checks the correct implementation of the logical AND operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] and [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.And</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Logical Or</Label>
                              <Description>The test checks the correct implementation of the logical OR operator defined for the SData query language. &lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Schema exists and is valid &lt;br&gt;
A property with attribute CanFilter = true must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve the first 10 resources&lt;br&gt;
- Check that the result is a valid feed&lt;br&gt;
- Search the schema for the resource kind and identify a filterable property, ideally one that is also a unique key&lt;br&gt;
- Search the feed for the first entry having a non-null value for the property selected above&lt;br&gt;
- The following query is generated: where=[property] eq [value] or [property] eq [value] and a GET request is performed&lt;br&gt;
- If the property was unique, then the result of the GET operation must return exactly one entry, namely the one that matching the resource originally selected&lt;br&gt;
- Otherwise, the original resource must be contained in the result of the query&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Logical.Or</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic string comparisons</Label>
                              <Description>The test checks the basic comparison operators for string type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
A string property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of string type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value without last character)] and [property] lt [value+”a”]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'String' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicStringComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer comparisons</Label>
                              <Description>The test checks the basic comparison operators for integer type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An integer property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of integer type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
    o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicIntegerComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal comparisons</Label>
                              <Description>The test checks the basic comparison operators for decimal type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of decimal type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
    o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
    o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= [property] ge [value] &lt;br&gt;
       o where= [property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
       o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
       o where=[property] eq [value]&lt;br&gt;
       o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
       o where=[property] gt [value -1)] and [property] lt [value+1]&lt;br&gt;
       o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDecimalComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic boolean comparisons</Label>
                              <Description>The test checks the basic comparison operators for boolean type properties&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
A boolean property that allows filtering must be present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Select a reference property of Boolean type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Generate a query where=[property] eq [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Boolean' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicBooleanComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date comparisons</Label>
                              <Description>The test checks the basic comparison operators for date type properties&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
An decimal property that allows filtering must be present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of date type that is filterable based on the schema definition. The property is ideally sortable and unique&lt;br&gt;
- Retrieve a resource where the content of the reference property is not null&lt;br&gt;
- Dependent on the attributes proceed as described below:&lt;br&gt;
     o Property has unique attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is the only resource in the response feed&lt;br&gt;
     o Property has sortable attribute -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= [property] ge [value] &lt;br&gt;
         o where= [property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
- Check whether the reference resource is found in the response feed&lt;br&gt;
     o Otherwise (best try) -&gt; generate the following queries&lt;br&gt;
         o where=[property] eq [value]&lt;br&gt;
         o where= where=[property] ge [value] and [property] le [value]&lt;br&gt;
         o where=[property] gt [value -1 day)] and [property] lt [value+1 day]&lt;br&gt;
         o where=[property] between [value] and  [value]&lt;br&gt;
Check whether the reference resource is found in the response feed&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Comparison.BasicDateComparison</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer additive</Label>
                              <Description>The test checks the implementation of additive operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicIntegerAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal additive</Label>
                              <Description>The test checks the implementation of additive operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDecimalAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date additive</Label>
                              <Description>The test checks the implementation of additive operations on date properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable date-type property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type date that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property]+[value]-[value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Date marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Additive.BasicDateAdditive</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on integer properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type integer that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Integer marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicIntegerMultiplicative</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal multiplicative</Label>
                              <Description>The test checks the implementation of multiplicative operations on decimal properties in the context of the SData query language.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/QueryLanguage.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one filterable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a reference property of type decimal that is filterable. Ideally, this property is unique.&lt;br&gt;
- Obtain a feed of 20 entries and select a reference with a non null and non-zero value in the reference property&lt;br&gt;
- Perform a query with parameters where=[property] mul [value] div [value] eq [value]&lt;br&gt;
- Check the response feed to ensure that all entries have the targeted value in the reference property&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type Decimal marked as 'CanFilter'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Multiplicative.BasicDecimalMultiplicative</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Precedence</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic precedence</Label>
                              <Description>The test checks the correct implementation of the precedence specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
Precedence support for the resource kind present in schema
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Determine the minimal and maximal precedence values for the resource&lt;br&gt;
- Perform a query filtering the payload with a median between the minimal and maximal precedence values&lt;br&gt;
- Check results for correctness&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;
- Perform a query with precedence greater than maximal precedence in the reference resource&lt;br&gt;
- Check that all properties are present&lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property defining 'precedence'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.BasicPrecedence</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Tests precedence=0</Label>
                              <Description>The test checks the correct implementation of the precedence=0 specification for the resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/ControllingThePayload.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Select a set of reference resources&lt;br&gt;
- Perform a query with precedence=0&lt;br&gt;
- Check for the absence of payload&lt;br&gt;

</Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>213</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Payload.ZeroPrecedence</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Sorting</Label>
                          <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check compliance with the precedence specification of the SData standard. &lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic integer sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for integer type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource
At least one sortable integer property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Integer' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicIntegerSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic decimal sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for decimal type properties.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable decimal property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Decimal' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDecimalSorting</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Basic date sorting</Label>
                              <Description>The test checks for the correct implementation of the sorting specification for date type properties.&lt;br&gt;&lt;br&gt;

The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/Queries/Sorting.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/Queries/Sorting.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Successfully compiled schema for the resource&lt;br&gt;
At least one sortable date property is present
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Perform a query on the resource kind using an ascending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;
- Perform a query on the resource kind using an descending sort instruction and restricting the result to 20 entries&lt;br&gt;
- Check whether the returned element are correctly ordered &lt;br&gt;</Description>
                              <ResultState>PreconditionNotFulfilled</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>0</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>PreconditionNotFulfilled</State>
                                <Message>Test cannot be executed because a precondition is not fulfilled.&lt;br&gt;Resource does not provide any property of type 'Date' marked as 'CanSort'.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.InDept.Get.Query.Sorting.BasicDateSorting</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP POST functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http POST operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST verb existence</Label>
                          <Description>This test detects whether the POST operation is implemented for a resource kind.&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Perform a POST operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Template existence</Label>
                          <Description>The test checks for the availability of a template for a resource kind.&lt;br&gt;&lt;br&gt;
For every resource kind, there is a special URL that returns a “template resource”, namely under the $template segment immediately succeeding the resource kind segment. The template is a payload corresponding to the resource schema having individual properties set to default values.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/AnatomyOfAnSDataURL/TemplateResourceURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Append the “/$template” to the original URL &lt;br&gt;
- Perform an http GET operation on the resulting URL&lt;br&gt;
- Check response for a 200 status code&lt;br&gt;
- Check the response content type to be one of: application/atom+xml oder application/atom+xml;type=feed&lt;br&gt;
- Check for presence of a feed element&lt;br&gt;</Description>
                          <ResultState>Ok</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>3</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>Ok</State>
                            <Message>Template exists.</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using $template</Label>
                          <Description>This test checks whether a POST operation can be successfully completed if a template is present.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/CreateOperation/UseOfTemplateURL.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;
The test proceeds as follows:&lt;br&gt;
- Retrieve the template from the $template segment&lt;br&gt;
- POST the template to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 201&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Check the response location&lt;br&gt;
    o Retrieve newly created resource&lt;br&gt;
    o Compare with the return of the POST operation&lt;br&gt;&lt;br&gt;
Teardown:&lt;br&gt;
- A delete operation is sent for the newly created resource using the URL in the ID element&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Template</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>POST using GET</Label>
                          <Description>This test performs a POST operation based on the contents of an already present resource.
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Preconditions:&lt;/b&gt; 
&lt;br/&gt;
Schema exists and is valid 
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Test flow:&lt;/b&gt; 
&lt;br/&gt;
- Obtain an individual resource by GET using a count=10 specification&lt;br/&gt;
- Clear the contents of the primary key elements&lt;br/&gt;
- Perform a POST using the amended contents - expect a status of 201 Created&lt;br/&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>POST is not supported. sme:canPost=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Post.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP PUT functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http PUT operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT verb existence</Label>
                          <Description>This test detects whether the PUT operation is implemented for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt; 
- Perform a PUT operation on the URL of a resource kind with no payload&lt;br&gt;
- Expected is a status code 500 error &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Existence</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>PUT success</Label>
                          <Description>This test checks whether the implementation of the PUT operation for a resource kind is correct.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;A successful GET operation
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource without any modification to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.Success</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Partial update</Label>
                          <Description>The test checks the partial update capability of a resource.&lt;br&gt;
The SData update protocol does not require that the consumer send the full payload when updating a resource. Instead, he may send a partial payload with modified properties only.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/UpdateOperation/199-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- PUT the resource after removing non-key properties from the payload to the resource kind URL&lt;br&gt;
- Check the result as follows:&lt;br&gt;
    o Status code = 200&lt;br&gt;
    o Load the result payload in a .Net XmlDocument object&lt;br&gt;
    o Check that the response content type matches application/atom+xml;type=entry &lt;br&gt;
    o Compare the original resource with the return of the POST operation&lt;br&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>1</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>PUT is not supported. sme:canPut=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Put.PartialUpdate</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>HTTP DELETE functionality</Label>
                      <Description>The tests grouped in this collection operate on a URL that points to an individual resource kind. They check the implementation conformance of http DELETE operations.&lt;br&gt; &lt;br&gt; 
A detailed description can be found under: &lt;br&gt; &lt;br&gt; 
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation.html&lt;/a&gt;
</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>DELETE verb existence</Label>
                          <Description>The test checks the correct implementation of a DELETE operation for a resource kind.&lt;br&gt;&lt;br&gt;
The corresponding specification can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/DeleteOperation/Example.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows: &lt;br&gt;
- Retrieve a single resource&lt;br&gt;
- DELETE the retrieved resource&lt;br&gt;
- Check the response for Status code = 200&lt;br&gt;
- Attempt retrieval of the resource using the original resource &lt;br&gt;
</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>DELETE is not supported. sme:canDelete=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Basic.Delete.Success</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                    <ResultInfoBase xsi:type="ResultGroupInfo">
                      <Label>Synchronization support</Label>
                      <Description>The tests grouped in this collection operate on the synchronization services of an individual resource. They check the implementation of the services provided below $syncDigest, $syncSource and $syncTarget segments of a resource kind. 
&lt;br/&gt;&lt;br/&gt;A detailed description can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;</Description>
                      <ResultState>PreconditionNotFulfilled</ResultState>
                      <Nodes>
                        <ResultInfoBase xsi:type="ResultGroupInfo">
                          <Label>Linking</Label>
                          <Description>The tests grouped in this collection operate on the linking services of an individual resource. Tests manipulation and queriabilty on linking metadata.&lt;br&gt;&lt;br&gt;
      A detailed description can be found under:&lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g1/277-DSY.html&lt;/a&gt;
</Description>
                          <ResultState>Ok</ResultState>
                          <Nodes>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Read Linked Entries</Label>
                              <Description>The test checks the ability to retrieve linking entries.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;Get /$linked operation is supported. At least one linked entry must be obtained by GET requests.
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain a feed representing a collection of linked resources for the resource type using operation /$linked.&lt;br&gt;
- Read the sdata:uuid attribute of the resource payload of the first entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found MUST be a valid guid. Otherwise the test results as ERROR and stops running.&lt;br/&gt;
- Obtain a feed representing a single linked resource using the uuid previously retrieved.&lt;br/&gt;
- Exactly on entry must exist in feed.&lt;br/&gt;
- Read the sdata:uuid attribute of the resource payload of the entry. If the uuid element is not found, the test results as ERROR and stops running&lt;br/&gt;
- The uuid value found must be exactly the same than the uuid retrieved in first feed.&lt;br/&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Required</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>1034</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.ReadLinkingEntries</FullName>
                            </ResultInfoBase>
                            <ResultInfoBase xsi:type="ResultTestInfo">
                              <Label>Delete Link</Label>
                              <Description>      The test checks the correct implementation of a DELETE operation for a correlation of a resource kind.&lt;br&gt;&lt;br&gt;
      The corresponding specification can be found under: &lt;br&gt;
&lt;a href="http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdataSync/Link/522-DSY.html&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;Preconditions:&lt;/b&gt;&lt;br&gt;At least one linked element must be obtained by GET $linked requests. 
&lt;br&gt;&lt;br&gt;&lt;b&gt;Test Flow:&lt;/b&gt;&lt;br&gt;The test proceeds as follows:&lt;br&gt;
- Obtain feed that enumerates correlations (linked-elements).&lt;br&gt;
- DELETE the link currently received.&lt;br&gt;
- Try to retrieve the link currently removed. =&gt; This MUST fail.&lt;br&gt;
- Try to retrieve the single resource using the sdata:url value of the resource payload. =&gt; The feed MUST contain exactly 1 entry and the resource payload MUST NOT contain a sdata:uuid attribute.&lt;br&gt;&lt;br&gt;
    </Description>
                              <ResultState>Ok</ResultState>
                              <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                              <Login />
                              <Password />
                              <FeatureType>Optional</FeatureType>
                              <Category>ResourceGeneral</Category>
                              <TimeConsumed>560</TimeConsumed>
                              <Target>phoneNumbers</Target>
                              <Result>
                                <State>Ok</State>
                                <Message>Test passed.&lt;br&gt;Feed successfully requested: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers('C-ANATR-P')&lt;br&gt;Trying to request the single resource from deleted link.&lt;br&gt;Feed successfully not received: http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers/$linked('6fa66996-35e5-4e17-a8b4-64ff962b925d')&lt;br&gt;Trying to request deleted link. =&gt; MUST fail.&lt;br&gt;Delete request successfully sent.&lt;br&gt;Deleting the correlation with uuid=6fa66996-35e5-4e17-a8b4-64ff962b925d</Message>
                                <Error />
                              </Result>
                              <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                              <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Linking.HttpDeleteLinking</FullName>
                            </ResultInfoBase>
                          </Nodes>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization basic mechanism compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the existence and structure of the synchronization mechanisms exposed for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. A single selected resource is then POSTed to the $syncTarget of the resourceKind.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
        &lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
        &lt;li&gt;$syncSource should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;On successful retrieval, get Location header&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Append the “/$syncResults” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation on the resulting URL using the source payload from previous http GET&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyncComplete</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncDigest compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncDigest segment for a resource kind. The test retrieves the digest provided by the application and checks its syntactic correctness.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/173-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Optional</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncDigest</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>syncSource compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This test targets the functionality exposed by the $syncSource segment for a resource kind. The digest is then manipulated by setting the application’s tick to 0 and used to retrieve the corresponding resources from the resource kind’s $syncSource service. The test checks the syntactic correctness of the returned result.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncSource</FullName>
                        </ResultInfoBase>
                        <ResultInfoBase xsi:type="ResultTestInfo">
                          <Label>Synchronization functional compliance</Label>
                          <Description>&lt;b&gt;Overview:&lt;/b&gt; This checks the functional compliance of the complete synchronization protocol for a resource kind.
&lt;br/&gt;The test starts by collecting the digest for the resource kind. The digest is then manipulated by setting a tick value of 0 for the application’s vector. This new digest is used to retrieve in a paged manner, (all) resources from the resource kind’s $syncSource service. The first returned resource is then manipulated by setting its modification tick to the pair (validationToolId, validationToolTick+1) where validationToolTick is either 0 or the value returned in the application’s digest; the payload itself is not modified. The resulting record along with the corresponding digest are then POSTed to the resource kind’s $syncTarget service.
&lt;br/&gt;&lt;br/&gt;The corresponding specification can be found under: 
&lt;br/&gt;&lt;a href="http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html" target="_blank"&gt;http://interop.sage.com/daisy/sdata/SDataProtocolDescription/171-DSY/g4/172-DSY.html&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;Preconditions:
&lt;ul&gt;
	&lt;li&gt;$syncDigest is required&lt;/li&gt;
	&lt;li&gt;There exists at least one record of the resource kind. Should this not be the case, the test will be stopped and a warning issued&lt;/li&gt;
	&lt;li&gt;$syncSource should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
        &lt;li&gt;$syncTarget should be present. In its absence, the test will be stopped with an informational status&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Test Flow:&lt;/b&gt; 
&lt;br/&gt;&lt;br/&gt;The test proceeds as follows: 
&lt;ul&gt;
	&lt;li&gt;Append the “/$syncDigest” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the resulting URL&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code and that at least one record of the resource kind exists&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest” exists&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:entry/sdata:payload/sync:digest/sync:digestEntry” exists&lt;/li&gt; 
	&lt;li&gt;Set Digest ticks equals 0&lt;/li&gt; 
	&lt;li&gt;Generate “trackingID” and append the “/$syncSource?trackingId=” to the original URL&lt;/li&gt; 
	&lt;li&gt;Perform an http POST operation using response from $syncDigest request as body payload&lt;/li&gt; 
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt; 
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt; 
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt; 
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
	&lt;li&gt;Atom schema conformance check&lt;/li&gt; 
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;  
	&lt;li&gt;Sync schema conformance check&lt;/li&gt; 
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt;  
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt; 
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists, and if “true” check for “/atom:feed/atom:entry/sync:syncState”, “/atom:feed/atom:entry/sdatahttp:httpMethod”&lt;/li&gt; 
	&lt;li&gt;Increase tick of first entry&lt;/li&gt;
	&lt;li&gt;Set timestamp of first entry to current datetime&lt;/li&gt;
	&lt;li&gt; Generate “trackingID” and append the “/$syncTarget?trackingId=” to the original URL&lt;/li&gt;
	&lt;li&gt;Perform an http POST operation using the edited response from $syncSourcerequest as body payload&lt;/li&gt;
	&lt;li&gt;Check response for a 202 status code&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt;
	&lt;li&gt;Check if root node is defined in sdata2008 namespace&lt;/li&gt;
	&lt;li&gt;Get HTTP Location header from previous response&lt;/li&gt;
	&lt;li&gt;Perform an http GET operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt;
	&lt;li&gt;Atom schema conformance check&lt;/li&gt;
	&lt;li&gt;Sdata2008 schema conformance check&lt;/li&gt; 
	&lt;li&gt;OpenSearch schema conformance check&lt;/li&gt;
	&lt;li&gt;sdataHttp schema conformance check&lt;/li&gt; 
	&lt;li&gt;Check if root node is defined in atom namespace&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry” exists&lt;/li&gt;
	&lt;li&gt;Check if “/atom:feed/atom:entry/sdata:payload” exists&lt;/li&gt; 
	&lt;li&gt;Perform an http DELETE operation on the URL extracted from Location header&lt;/li&gt;
	&lt;li&gt;Check response for a 200 status code&lt;/li&gt; 
&lt;/ul&gt;</Description>
                          <ResultState>PreconditionNotFulfilled</ResultState>
                          <Url>http://kar-23970-ws:5493/sdata/Northwind/gcrm/-/phoneNumbers</Url>
                          <Login />
                          <Password />
                          <FeatureType>Required</FeatureType>
                          <Category>ResourceGeneral</Category>
                          <TimeConsumed>0</TimeConsumed>
                          <Target>phoneNumbers</Target>
                          <Result>
                            <State>PreconditionNotFulfilled</State>
                            <Message>Syncronisation is not supported. sme:isSyncSource=false or sme:isSyncTarget=false</Message>
                            <Error />
                          </Result>
                          <AssemblyPath>C:\sdata\Validation\Sage.Sis.Sdata.Validation\Staging\bin\Sage.Sis.Sdata.Validation.TestCases.dll</AssemblyPath>
                          <FullName>Sage.Sis.Sdata.Validation.TestCases.ResourceKind.Sync.SyntacticValidation.SyncTarget</FullName>
                        </ResultInfoBase>
                      </Nodes>
                    </ResultInfoBase>
                  </Nodes>
                </ResultInfoBase>
              </Nodes>
            </ResultInfoBase>
          </Nodes>
        </ResultInfoBase>
      </Nodes>
    </ResultInfoBase>
  </Nodes>
</ResultGroupInfo>